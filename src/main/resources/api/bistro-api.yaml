openapi: 3.0.3
info:
  title: Bistro API
  version: 1.0.0
paths:
  /products:
    get:
      tags:
        - Products
      summary: Liste aller Produkte
      responses:
        '200':
          description: Erfolgreich
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        400:
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        404:
          description: Keine Produkte gefunden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /products/{id}:
    get:
      tags:
        - Products
      summary: Produktdetails anzeigen
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Erfolgreich
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Keine Produkte gefunden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /orders:
    post:
      tags:
        - Orders
      summary: Neue Bestellung aufgeben
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: Bestellung erstellt
        '400':
          description: Ungültige Anfrage
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Keine Produkte gefunden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Bestelldetails anzeigen
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Erfolgreich
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Keine Produkte gefunden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Interner Serverfehler
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        externalId:
          type: string
        price:
          type: number
          format: float
      required:
        - id
        - name
        - externalId
        - price
    OrderItem:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        amount:
          type: integer
          minimum: 1
      required:
        - product
        - amount
    OrderItemRequest:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        amount:
          type: integer
          minimum: 1
      required:
        - product
        - amount
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        customerName:
          type: string
        tableNumber:
          type: string
        totalPrice:
          type: number
          format: float
        originalPrice:
          type: number
          format: float
        orderTime:
          type: string
          format: date-time
      required:
        - id
        - items
        - tableNumber
        - totalPrice
        - orderTime
    OrderRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRequest'
        tableNumber:
          type: string
        customerName:
          type: string
      required:
        - items
        - tableNumber
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
      required:
        - message
        - code